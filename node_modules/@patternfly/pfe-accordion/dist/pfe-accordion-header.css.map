{"version":3,"sources":["pfe-accordion-header.scss","../../pfe-sass/mixins/_mixins.scss","pfe-accordion-header.css"],"names":[],"mappings":"AAQA;ECkPE,cAAc;ACxPhB;;AFMA;ECoPI,SAAS;ACtPb;;AFEA;EC6TI,0CAA0C;EAC1C,qFAAwC;EAExC,4IAAsD;EACtD,qIAAwD;EACxD,4KAA0D;EAE1D,+FAA8E;EA1E9E,SAAS;EACT,WAAW;EACX,YAAY;EACZ,oBAAoB;EACpB,gBAAa;EAAb,qDAAa;EACb,gBAAgB;EAChB,eAAe;EACf,UAAU;EACV,kBAAkB;EAElB,2BAA8C;EAA9C,wDAA8C;EAC9C,gBAAa;EAAb,+CAAa;EAEb,gCAAkB;EAClB,4CAAkB;EAClB,6CAAkB;EAClB,+CAAkB;EAClB,iDAAkB;EAClB,aAAa;EAqBT,mDAA2H;EAA3H,+JAA2H;ACxQnI;;AFzBA;EC+QQ,aAAa;EACb,+DAAmB;EACnB,UAAU;AClPlB;;AF/BA;ECqRQ,aAAa;EACb,UAAU;EACV,0BAA0B;AClPlC;;AFrCA;EC2RQ,SAAS;AClPjB;;AFzCA;ECkVI,oFAA0C;EAC1C,0FAAwC;EACxC,0FAA4C;EAC5C,6LAAsD;EACtD,iLAAwD;EArCxD,kBAAkB;EAClB,cAAc;EACd,gBAAgB;AC/PpB;;AFpDA;EC+VE,WAAW;EACX,kBAAkB;EAClB,mCAAuH;EAAvH,uEAAuH;EACvH,cAAc;EACd,mBAAc;EAAd,4DAAc;EACd,eAAQ;EACR,cAAQ;EACR,kBAAkB;EAClB,2CAA2B;EAA3B,mCAA2B;EAA3B,2BAA2B;EAA3B,oDAA2B;EAEzB,+BAA+E;EAC/E,gBAAgB;EAChB,iCAAyB;UAAzB,yBAAyB;EAKvB,uBAAO;EAAP,2DAAO;AC5Sb;;AFpEA;EC+VE,WAAW;EACX,kBAAkB;EAClB,mCAAuH;EAAvH,uEAAuH;EACvH,cAAc;EACd,mBAAc;EAAd,4DAAc;EACd,eAAQ;EACR,cAAQ;EACR,kBAAkB;EAClB,2CAA2B;EAA3B,mCAA2B;EAA3B,2BAA2B;EAA3B,oDAA2B;EAazB,+BAA+E;EAC/E,gCAAwB;UAAxB,wBAAwB;EAKtB,uBAAO;EAAP,2DAAO;ACvSb;;AF9DA;ECuRE,6BAA6G;EAA7G,yJAA6G;ACrN/G;;AF1DA;ECyQE,gCAAgH;EAAhH,4JAAgH;EAChH,aAAa;AC3Mf;;AFzDA;EACE,mFAAuD;EAAvD,2EAAuD;EAAvD,mEAAuD;EAAvD,oIAAuD;EAAvD,uHAAuD;EAAvD,+GAAuD;EAAvD,uGAAuD;EAAvD,4MAAuD;AE4DzD;;AF7DA;EC8QI,kBAAkB;EAClB,cAAc;EACd,gBAAgB;EA+BhB,oFAA0C;EAC1C,0FAAwC;EACxC,0FAA4C;EAC5C,6LAAsD;EACtD,iLAAwD;AC3O5D;;AF3DA;ECwQI,0CAA0C;EAC1C,oFAAwC;EACxC,yFAA8E;ACzMlF;;AFjEA;EC0RI,gFAA0C;EAC1C,oFAAwC;EACxC,mLAAsD;EACtD,4KAAwD;EAExD,yFAA8E;ACtNlF;;AF/DA;ECgRI,gFAA0C;EAC1C,oFAAwC;EACxC,mLAAsD;EACtD,4KAAwD;EAExD,yFAA8E;AC9MlF","file":"pfe-accordion-header.css","sourcesContent":["@import \"../../pfe-sass/pfe-sass\";\n\n$LOCAL: accordion;\n\n/// ===========================================================================\n/// DEFAULT ACCORDION HEADING\n/// ===========================================================================\n\n:host {\n  @include  pfe-accordion-header;\n\n  button {\n    @include pfe-trigger-color($component-name: accordion);\n    @include pfe-trigger-button;\n\n    &[aria-expanded=\"true\"] {\n      @include pfe-trigger-color-expanded($component-name: accordion);\n      @include pfe-trigger-expanded;\n      &::after {\n        @include pfe-chevron-expanded;\n      }\n    }\n\n    &[aria-expanded=\"false\"]::after {\n        @include pfe-chevron-expanded($state: false);\n    }\n  }\n}\n\n:host(:first-child) {\n  button {\n    @include pfe-trigger-button-first($theme: light);\n  }\n}\n\n\n// Add border bottom to the last button in an accordion set.\n:host(:last-of-type) {\n  button[aria-expanded=\"false\"] {\n    @include pfe-trigger-button-last;\n  }\n}\n\n:host(.animating) {\n  transition: transform 0.3s #{pfe-var(animation-timing)};\n\n  button {\n    @include pfe-trigger-expanded;\n    @include pfe-trigger-color-expanded($theme: light, $component-name: accordion);\n  }\n}\n\n/// ===========================================================================\n/// CONTEXT STYLES, ON=DARK\n/// ===========================================================================\n\n:host([on=\"dark\"]) {\n  button {\n    @include pfe-trigger-color($theme: dark, $component-name: accordion);\n\n    &[aria-expanded=\"true\"] {\n      @include pfe-trigger-color-expanded($theme: dark, $component-name: accordion);\n    }\n  }\n}\n\n:host([on=\"dark\"].animating){\n  button {\n    @include pfe-trigger-color-expanded($theme: dark, $component-name: accordion);\n  }\n}\n","@mixin browser-query($browser-list) {\n  @each $browser in $browser-list {\n    /* IE10+ */\n    @if $browser == ie11 {\n      @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n        @content;\n      }\n    }\n\n    /* Microsoft Edge Browser 12+ (All) */\n    @if $browser == edge {\n      @supports (-ms-ime-align:auto) {\n        @content;\n      }\n    }\n  }\n}\n \n// $boxSize = any box-sizing property, default is border-box\n@mixin pfe-box-sizing($boxSize: border-box) {\n  *, *::before, *::after {\n    box-sizing: $boxSize;\n  }\n}\n\n@mixin pfe-clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n\n@mixin pfe-reset-list() {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n@mixin pfe-reset-box() {\n  margin: 0;\n  padding: 0;\n}\n\n@mixin pfe-reset-button() {\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0;\n}\n\n@mixin pfe-sr-only() {\n  position: absolute;\n  overflow: hidden;\n  clip: rect(0,0,0,0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\n@mixin print-variables-map($variables) {\n  @each $property, $value in $variables {\n    $name: \"--#{$property}\";\n    $styles: $value;\n    @if type-of($value) == \"map\" {\n      @each $prop, $v in $value {\n        $name: \"__#{$property}--#{$prop}\";\n        $styles: $v;\n      }\n    }\n\n    --pfe-#{$LOCAL}#{$name}: #{$styles};\n  }\n}\n\n/// ===========================================================================\n/// Theme Color Vars   - use with on=\"dark\" to affect light DOM\n/// ===========================================================================\n\n@mixin pfe-theme($theme) {\n  // GENERAL CONTEXT-BASED UPDATES, ON=\"DARK\"\n  @if $theme == dark {\n    --pfe-broadcasted--color--text:               #{pfe-color(text--on-dark)};\n    --pfe-broadcasted--color--ui-link:            #{pfe-color(ui-link--on-dark)};\n    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(ui-link--on-dark--visited)};\n    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(ui-link--on-dark--hover)};\n    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(ui-link--on-dark--focus)};\n  }\n  @else if $theme == light {\n    --pfe-broadcasted--color--text:               #{pfe-color(text)};\n    --pfe-broadcasted--color--ui-link:            #{pfe-color(ui-link)};\n    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(ui-link--visited)};\n    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(ui-link--hover)};\n    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(ui-link--focus)};\n  }\n  // MORE SPECIFIC COLOR BASED UPDATES, COLOR=\"DARKER\"\n  @else if $theme == darker {\n    --pfe-broadcasted--color--text:               #{pfe-color(surface--darker--text)};\n    --pfe-broadcasted--color--ui-link:            #{pfe-color(surface--darker--link)};\n    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(surface--darker--link--visited)};\n    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(surface--darker--link--hover)};\n    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(surface--darker--link--focus)};\n  }\n  @else if $theme == darkest {\n    --pfe-broadcasted--color--text:               #{pfe-color(surface--darkest--text)};\n    --pfe-broadcasted--color--ui-link:            #{pfe-color(surface--darkest--link)};\n    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(surface--darkest--link--visited)};\n    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(surface--darkest--link--hover)};\n    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(surface--darkest--link--focus)};\n  }\n  @else if $theme == accent {\n    --pfe-broadcasted--color--text:               #{pfe-color(surface--accent--text)};\n    --pfe-broadcasted--color--ui-link:            #{pfe-color(surface--accent--link)};\n    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(surface--accent--link--visited)};\n    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(surface--accent--link--hover)};\n    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(surface--accent--link--focus)};\n  }\n  @else if $theme == complement {\n    --pfe-broadcasted--color--text:               #{pfe-color(surface--complement--text)};\n    --pfe-broadcasted--color--ui-link:            #{pfe-color(surface--complement--link)};\n    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(surface--complement--link--visited)};\n    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(surface--complement--link--hover)};\n    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(surface--complement--link--focus)};\n  }\n\n  @else if $theme == lighter {\n    --pfe-broadcasted--color--text:               #{pfe-color(surface--lighter--text)};\n    --pfe-broadcasted--color--ui-link:            #{pfe-color(surface--lighter--link)};\n    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(surface--lighter--link--visited)};\n    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(surface--lighter--link--hover)};\n    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(surface--lighter--link--focus)};\n  }\n  @else if $theme == lightest {\n    --pfe-broadcasted--color--text:               #{pfe-color(surface--lightest--text)};\n    --pfe-broadcasted--color--ui-link:            #{pfe-color(surface--lightest--link)};\n    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(surface--lightest--link--visited)};\n    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(surface--lightest--link--hover)};\n    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(surface--lightest--link--focus)};\n  }\n}\n\n@mixin pfe-transition($properties...) {\n  $return: null;\n  @each $property in $properties {\n    @if length($property) == 1 {\n      $return: append($return, #{$property} 250ms $pfe-global--animation-timing, comma);\n    }\n    @else if length($property) == 2 {\n      $return: append($return, nth($property, 1) nth($property, 2), comma);\n    }\n  }\n  transition: $return;\n}\n\n// Make a CSS arrow\n@mixin pfe-arrow($type, $color, $width: 8px, $height: 5px, $pseudo: false) {\n  $direction: (\n    up: 180deg,\n    down: 0deg,\n    right: -90deg,\n    left: 90deg,\n  );\n  border-style: #{pfe-var(surface--border-style)};\n  border-width: $width $height 0;\n  border-color: transparent;\n  border-top-color: $color;\n  transform: rotate(map-get($direction, $type));\n  @if $pseudo {\n    display: inline-block;\n    content: \"\";\n    @content;\n  }\n}\n\n@mixin pfe-arrow-color($color) {\n  border-top-color: $color;\n}\n\n@mixin pfe-print-media {\n  @media print {\n    @content;\n  }\n}\n\n@mixin pfe-print-background {\n  -webkit-print-color-adjust: exact;\n  color-adjust: exact;\n}\n// scss-lint:disable ImportantRule\n@mixin pfe-no-print-background {\n  @include pfe-print-media {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n// scss-lint:enable ImportantRule\n\n@mixin pfe-pipe( $position: right, $padding: 0, $margin: 0, $color: $border-color) {\n  border: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;\n  border-#{$position}-color: $color;\n  @if $position == right {\n    padding-left: $padding;\n    margin-right: $margin;\n  }\n  @else if $position == left {\n    padding-right: $padding;\n    margin-left: $margin;\n  }\n}\n\n@mixin pfe-retina {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n\n// Mixin for building slot selectors\n@mixin pfe-slot($slot-name, $selector: \"\") {\n  // This logic makes it much easier to style default slots in a loop\n  // with named slots\n  @if $slot-name != default {\n    ::slotted([slot=\"#{$slot-name}\"]#{$selector}) {\n      @content;\n    }\n  }\n  @else {\n    ::slotted(*) {\n      @content;\n    }\n  }\n}\n\n/// ===========================================================================\n/// Accordion Specific SASS Vars\n/// ===========================================================================\n\n$pfe-expand_button--LineHeight:      1.5;\n$pfe-expand_button--padding:         #{pfe-var(container-spacer)};\n$pfe-expand_button--padding--factor: .75;\n$pfe-expand_button--padding--wide:   calc(#{$pfe-expand_button--padding} * 1.5);\n\n$pfe-expand_chevron--size:           .4em;\n$pfe-expand_chevron--weight:         .1em;\n$pfe-expand_chevron--padding:        3em;\n$pfe-expand_chevron--placement:      #{$pfe-expand_button--LineHeight / 2 - $pfe-expand_chevron--size / 2};\n\n@mixin pfe-accordion-header {\n  display: block;\n  > * {\n    margin: 0;\n  }\n}\n\n@mixin pfe-trigger-button($align: left) {\n    // -webkit-appearance: button;\n    margin: 0;\n    width: 100%;\n    height: auto;\n    font-family: inherit;\n    font-weight: #{pfe-var(font-weight--bold)};\n    text-align: left;\n    cursor: pointer;\n    z-index: 1;\n    position: relative;\n\n    font-size:   calc(#{pfe-var(font-size)} * 1.1);\n    line-height: #{pfe-var(line-height)};\n\n    color:            #{pfe-local(aux)};\n    background-color: #{pfe-local(main)};\n    border-left:      #{pfe-local(BorderLeft)};\n    border-right:     #{pfe-local(BorderRight)};\n    border-bottom:    #{pfe-local(BorderBottom)};\n    border-top: 0;\n\n    &:hover {\n        outline: none;\n        border-left-color: #{pfe-local(BorderLeftColor--focus)};\n        z-index: 2;\n    }\n\n    &:focus {\n        outline: none;\n        z-index: 2;\n        text-decoration: underline;\n    }\n\n    &::-moz-focus-inner {\n        border: 0;\n    }\n\n    @if $align == right {\n        padding: #{$pfe-expand_button--padding} #{$pfe-expand_button--padding--wide} #{$pfe-expand_button--padding} 50px !important;\n    } @else {\n        padding: #{$pfe-expand_button--padding} 50px #{$pfe-expand_button--padding} #{$pfe-expand_button--padding--wide} !important;\n    }\n}\n\n@mixin pfe-trigger-button-last($theme: light) {\n  border-bottom: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};\n  border-top: 0;\n  // @TODO Support differences based on theme\n}\n\n@mixin pfe-trigger-button-first($theme: light) {\n  border-top: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};\n  // @TODO Support differences based on theme\n}\n\n@mixin pfe-trigger-expanded {\n    position: relative;\n    display: block;\n    border-bottom: 0;\n}\n\n@mixin pfe-trigger-color($component-name, $theme: light) {\n  @if $theme == dark {\n    --pfe-#{$component-name}--main:         transparent;\n    --pfe-#{$component-name}--aux:          #{pfe-color(surface--darkest--text)};\n    --pfe-#{$component-name}--BorderLeftColor--focus: #{pfe-color(surface--lightest)};\n  }\n  @else {\n    --pfe-#{$component-name}--main:         transparent;\n    --pfe-#{$component-name}--aux:          #{pfe-color(surface--lightest--text)};\n\n    --pfe-#{$component-name}--BorderLeft:  #{pfe-var(surface--border-width--heavy)} #{pfe-var(surface--border-style)} transparent;\n    --pfe-#{$component-name}--BorderRight: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;\n    --pfe-#{$component-name}--BorderBottom: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};\n\n    --pfe-#{$component-name}--BorderLeftColor--focus: #{pfe-color(surface--lightest--link)};\n  }\n}\n\n@mixin pfe-trigger-color-expanded($component-name, $theme: light) {\n  @if $theme == dark {\n    --pfe-#{$component-name}--main:         #{pfe-color(surface--darker)};\n    --pfe-#{$component-name}--aux:          #{pfe-color(surface--darkest--text)};\n    --pfe-#{$component-name}--BorderLeft:   #{pfe-var(surface--border-width--heavy)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};\n    --pfe-#{$component-name}--BorderRight:  #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};\n\n    --pfe-#{$component-name}--BorderLeftColor--focus: #{pfe-color(surface--lightest)};\n  }\n  @else {\n    --pfe-#{$component-name}--main:              #{pfe-color(surface--lightest)};\n    --pfe-#{$component-name}--aux:               #{pfe-color(surface--lightest--text)};\n    --pfe-#{$component-name}--focus:             #{pfe-color(surface--lightest--link)};\n    --pfe-#{$component-name}--BorderLeft:        #{pfe-var(surface--border-width--heavy)} #{pfe-var(surface--border-style)} #{pfe-color(surface--lightest--link)};\n    --pfe-#{$component-name}--BorderRight:       #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};\n  }\n}\n\n/// ===========================================================================\n/// Accordion chevrons\n/// ===========================================================================\n\n@mixin pfe-chevron-expanded($state: true, $position: after) {\n  content: \"\";\n  position: absolute;\n  top: calc((#{pfe-var(container-spacer)} * #{$pfe-expand_button--padding--factor}) + #{$pfe-expand_chevron--placement} );\n  display: block;\n  border-style: #{pfe-var(surface--border-style)};\n  height: #{$pfe-expand_chevron--size};\n  width:  #{$pfe-expand_chevron--size};\n  text-align: center;\n  transition: transform 0.15s;\n  @if $state {\n    border-width: #{$pfe-expand_chevron--weight} #{$pfe-expand_chevron--weight} 0 0;\n    border-bottom: 0;\n    transform: rotate(-45deg);\n    @if $position == before {\n      left: #{$pfe-expand_button--padding--wide};\n    }\n    @else {\n      right: #{$pfe-expand_button--padding--wide};\n    }\n  }\n  @else {\n    border-width: 0 #{$pfe-expand_chevron--weight} #{$pfe-expand_chevron--weight} 0;\n    transform: rotate(45deg);\n    @if $position == before {\n      left: #{$pfe-expand_button--padding--wide};\n    }\n    @else {\n      right: #{$pfe-expand_button--padding--wide};\n    }\n  }\n}\n\n/// ===========================================================================\n/// Accordion panel\n/// ===========================================================================\n\n@mixin pfe-container {\n  position: relative;\n  display: block;\n  width: 100%;\n\n  padding: calc(#{pfe-local(Padding--vertical)} / 2)  #{pfe-local(Padding--horizontal)};\n\n  @media (min-width: #{pfe-breakpoint(sm)}) {\n     padding: #{pfe-local(Padding)};\n  }\n}\n\n@mixin pfe-accordion-panel {\n  display: none;\n  overflow: hidden;\n  will-change: height;\n  border-color: transparent;\n  opacity: 0;\n}\n\n@mixin pfe-accordion-panel-expanded {\n  display: block;\n  position: relative;\n  opacity: 1;\n}\n\n@mixin pfe-accordion-panel-expanded-style($theme: light) {\n  border-right: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;\n  border-left: #{pfe-var(surface--border-width--heavy)} #{pfe-var(surface--border-style)} transparent;\n  @if $theme == dark {\n    box-shadow: none;\n    background-color: #{pfe-color(surface--darker)};\n    border-left-color: #{pfe-color(surface--border)};\n    border-right-color: #{pfe-color(surface--border)};\n  }\n  @else {\n    box-shadow: 0 5px #{pfe-var(surface--border-width--heavy)} rgba(140, 140, 140, 0.35);\n    border-left-color: #{pfe-color(surface--lightest--link)};\n    background-color: #{pfe-color(surface--lightest)};\n    border-right-color: #{pfe-color(surface--border)};\n    border-bottom: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};\n  }\n}\n\n@mixin pfe-accordion-panel-container-inset($align: left)  {\n  box-sizing: border-box;\n  width: 100%;\n\n  @if $align == left {\n    padding: 0 #{$pfe-expand_chevron--padding} #{$pfe-expand_button--padding} #{$pfe-expand_button--padding--wide};\n  }\n  @else {\n    padding: 0 #{$pfe-expand_button--padding--wide} #{$pfe-expand_button--padding} #{$pfe-expand_chevron--padding};\n  }\n}\n\n@mixin pfe-icon($path, $display: flex, $size: 1em) {\n  display: #{$display};\n  @if $path {\n    background: #{$path} no-repeat;\n    background-size: contain;\n    background-position: center;\n  }\n  width: #{$size};\n  height: #{$size};\n  @content;}\n",":host {\n  display: block;\n}\n\n:host > * {\n  margin: 0;\n}\n\n:host button {\n  --pfe-accordion--main:         transparent;\n  --pfe-accordion--aux:          var(--pfe-theme--color--surface--lightest--text, #333);\n  --pfe-accordion--BorderLeft:  var(--pfe-theme--surface--border-width--heavy, 4px) var(--pfe-theme--surface--border-style, solid) transparent;\n  --pfe-accordion--BorderRight: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) transparent;\n  --pfe-accordion--BorderBottom: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n  --pfe-accordion--BorderLeftColor--focus: var(--pfe-theme--color--surface--lightest--link, #06c);\n  margin: 0;\n  width: 100%;\n  height: auto;\n  font-family: inherit;\n  font-weight: var(--pfe-theme--font-weight--bold, 700);\n  text-align: left;\n  cursor: pointer;\n  z-index: 1;\n  position: relative;\n  font-size: calc(var(--pfe-theme--font-size, 16px) * 1.1);\n  line-height: var(--pfe-theme--line-height, 1.5);\n  color: var(--pfe-accordion--aux);\n  background-color: var(--pfe-accordion--main);\n  border-left: var(--pfe-accordion--BorderLeft);\n  border-right: var(--pfe-accordion--BorderRight);\n  border-bottom: var(--pfe-accordion--BorderBottom);\n  border-top: 0;\n  padding: var(--pfe-theme--container-spacer, 16px) 50px var(--pfe-theme--container-spacer, 16px) calc(var(--pfe-theme--container-spacer, 16px) * 1.5) !important;\n}\n\n:host button:hover {\n  outline: none;\n  border-left-color: var(--pfe-accordion--BorderLeftColor--focus);\n  z-index: 2;\n}\n\n:host button:focus {\n  outline: none;\n  z-index: 2;\n  text-decoration: underline;\n}\n\n:host button::-moz-focus-inner {\n  border: 0;\n}\n\n:host button[aria-expanded=\"true\"] {\n  --pfe-accordion--main:              var(--pfe-theme--color--surface--lightest, #fff);\n  --pfe-accordion--aux:               var(--pfe-theme--color--surface--lightest--text, #333);\n  --pfe-accordion--focus:             var(--pfe-theme--color--surface--lightest--link, #06c);\n  --pfe-accordion--BorderLeft:        var(--pfe-theme--surface--border-width--heavy, 4px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--lightest--link, #06c);\n  --pfe-accordion--BorderRight:       var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n  position: relative;\n  display: block;\n  border-bottom: 0;\n}\n\n:host button[aria-expanded=\"true\"]::after {\n  content: \"\";\n  position: absolute;\n  top: calc((var(--pfe-theme--container-spacer, 16px) * 0.75) + 0.5935em);\n  display: block;\n  border-style: var(--pfe-theme--surface--border-style, solid);\n  height: 0.313em;\n  width: 0.313em;\n  text-align: center;\n  transition: transform 0.15s;\n  border-width: 0.15em 0.15em 0 0;\n  border-bottom: 0;\n  transform: rotate(-45deg);\n  right: calc(var(--pfe-theme--container-spacer, 16px) * 1.5);\n}\n\n:host button[aria-expanded=\"false\"]::after {\n  content: \"\";\n  position: absolute;\n  top: calc((var(--pfe-theme--container-spacer, 16px) * 0.75) + 0.5935em);\n  display: block;\n  border-style: var(--pfe-theme--surface--border-style, solid);\n  height: 0.313em;\n  width: 0.313em;\n  text-align: center;\n  transition: transform 0.15s;\n  border-width: 0 0.15em 0.15em 0;\n  transform: rotate(45deg);\n  right: calc(var(--pfe-theme--container-spacer, 16px) * 1.5);\n}\n\n:host(:first-child) button {\n  border-top: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n}\n\n:host(:last-of-type) button[aria-expanded=\"false\"] {\n  border-bottom: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n  border-top: 0;\n}\n\n:host(.animating) {\n  transition: transform 0.3s var(--pfe-theme--animation-timing, cubic-bezier(0.465, 0.183, 0.153, 0.946));\n}\n\n:host(.animating) button {\n  position: relative;\n  display: block;\n  border-bottom: 0;\n  --pfe-accordion--main:              var(--pfe-theme--color--surface--lightest, #fff);\n  --pfe-accordion--aux:               var(--pfe-theme--color--surface--lightest--text, #333);\n  --pfe-accordion--focus:             var(--pfe-theme--color--surface--lightest--link, #06c);\n  --pfe-accordion--BorderLeft:        var(--pfe-theme--surface--border-width--heavy, 4px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--lightest--link, #06c);\n  --pfe-accordion--BorderRight:       var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n}\n\n:host([on=\"dark\"]) button {\n  --pfe-accordion--main:         transparent;\n  --pfe-accordion--aux:          var(--pfe-theme--color--surface--darkest--text, #fff);\n  --pfe-accordion--BorderLeftColor--focus: var(--pfe-theme--color--surface--lightest, #fff);\n}\n\n:host([on=\"dark\"]) button[aria-expanded=\"true\"] {\n  --pfe-accordion--main:         var(--pfe-theme--color--surface--darker, #464646);\n  --pfe-accordion--aux:          var(--pfe-theme--color--surface--darkest--text, #fff);\n  --pfe-accordion--BorderLeft:   var(--pfe-theme--surface--border-width--heavy, 4px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n  --pfe-accordion--BorderRight:  var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n  --pfe-accordion--BorderLeftColor--focus: var(--pfe-theme--color--surface--lightest, #fff);\n}\n\n:host([on=\"dark\"].animating) button {\n  --pfe-accordion--main:         var(--pfe-theme--color--surface--darker, #464646);\n  --pfe-accordion--aux:          var(--pfe-theme--color--surface--darkest--text, #fff);\n  --pfe-accordion--BorderLeft:   var(--pfe-theme--surface--border-width--heavy, 4px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n  --pfe-accordion--BorderRight:  var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n  --pfe-accordion--BorderLeftColor--focus: var(--pfe-theme--color--surface--lightest, #fff);\n}\n"]}